env: {}


replicaCount: 1

health:
  startupProbe:
    failureThreshold: 30
    periodSeconds: 10
  livenessProbe:
    periodSeconds: 30
  readinessProbe:
    periodSeconds: 5


image: &image
  repository: polecatworks/k8s-python
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations:
  prometheus.io/path: /hams/metrics
  prometheus.io/port: "8079"
  prometheus.io/scrape: "true"

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}


global: {}  # TODO: Work to remove this

configs: {}  # Note: Defaults provided in helm configs dir




command:
- k8s-python
- --config
- /opt/app/configs/serviceconfig.yaml
- --secrets
- /opt/app/secrets
- start

secretName: null

volumes: &volumes
  - name: configs
    configMap:
      name: "{{ template \"k8s-python.fullname\" . }}"
  - name: objects
    emptyDir:
      sizeLimit: 500Mi
  - name: secrets
    projected:
      sources:
        - secret:
            optional: true
            name: "{{ .Values.secretName | default (include \"k8s-python.fullname\" .) }}"
            items:
              - key: access_key_id
                path: s3/access_key_id
              - key: secret_key
                path: s3/secret_key


volumeMounts: &volume-mount
  - name: configs
    mountPath: /opt/app/configs
  - name: objects
    # TODO: remove objects as we use real object-store
    mountPath: /opt/app/objects
  - name: secrets
    mountPath: /opt/app/secrets



# virtualservice:
#   targetService: dynamic-lists
#   targetPort: 8999
#   match:
#   - uri:
#       prefix: "/dynamic-lists/api/v0/hello"
#     port: 8999

devsecops:
  RequestAuthentication:
    jwtRules: []
  AuthorizationPolicy:
    rules: []


# schema:
#   command:
#   - /usr/local/bin/k8s-python
#   - migrate
#   - --config
#   - /opt/app/configs/serviceconfig.yaml
#   - --secrets
#   - /opt/app/secrets
#   env:
#     APP__PERSISTENCE__DB__CONNECTION__PASSWORD:
#       valueFrom:
#         secretKeyRef:
#           name: tooling-postgres
#           key: admin
#     #! APP__PERSISTENCE__DB__CONNECTION__PASSWORD_FILE: database_admin/password
#     APP__PERSISTENCE__DB__CONNECTION__USERNAME: postgres
#   image: *image
#     # repository: polecatworks/k8s-python
#     # pullPolicy: IfNotPresent
#   volumeMounts: *volume-mount
#   volumes: *volumes
